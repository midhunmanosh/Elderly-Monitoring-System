#include <Wire.h>
#include <ESP8266WiFi.h>

const char* ssid = "YOUR_SSID";
const char* password = "YOUR_PASSWORD";

const int lm35Pin = A0;  // Pin that the LM35 sensor is connected to
const int mpu6050Address = 0x68;  // I2C address of the MPU6050 sensor

int16_t ax, ay, az;  // Variables to store raw acceleration data

void setup() {
  Serial.begin(9600);
  Wire.begin();
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");
}

void loop() {
  float temperature = getTemperature();
  getAcceleration();
  sendIFTTTAlert(temperature, ax, ay, az);
  delay(10000);  // Delay 10 seconds before sending next readings
}

float getTemperature() {
  int lm35Reading = analogRead(lm35Pin);
  float voltage = lm35Reading * 3.3 / 1024;
  float temperature = voltage / 0.01;
  return temperature;
}

void getAcceleration() {
  Wire.beginTransmission(mpu6050Address);
  Wire.write(0x3B);  // Start at ACCEL_XOUT_H register
  Wire.endTransmission(false);
  Wire.requestFrom(mpu6050Address, 6, true);  // Request 6 bytes (2 bytes per axis)
  ax = Wire.read() << 8 | Wire.read();  // Store x-axis values
  ay = Wire.read() << 8 | Wire.read();  // Store y-axis values
  az = Wire.read() << 8 | Wire.read();  // Store z-axis values
}

void sendIFTTTAlert(float temperature, int16_t ax, int16_t ay, int16_t az) {
  // Replace YOUR_IFTTT_KEY with your personal IFTTT key
  const char* host = "maker.ifttt.com";
  const char* key = "YOUR_IFTTT_KEY";
  const char* eventName = "sensor_reading";
  String url = "/trigger/" + String(eventName) + "/with/key/" + String(key);

  WiFiClient client;
  if (client.connect(host, 80)) {
    String body = "value1=" + String(temperature) + "&value2=" + String(ax) + "&value3=" + String(ay) + "&value4=" + String(az);
    client.print(String("POST ") + url + " HTTP/1.1\r\
